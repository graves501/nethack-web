diff --git a/include/config.h b/include/config.h
index b606b5db1..17f09b57a 100644
--- a/include/config.h
+++ b/include/config.h
@@ -38,6 +38,10 @@
 
 #include "config1.h" /* should auto-detect MSDOS, MAC, AMIGA, and WIN32 */
 
+#ifdef WEB_GRAPHICS
+#define DEFAULT_WINDOW_SYS "web"
+#endif
+
 /* Windowing systems...
  * Define all of those you want supported in your binary.
  * Some combinations make no sense.  See the installation document.
@@ -261,7 +265,7 @@
  *
  */
 
-#if defined(UNIX) && !defined(ZLIB_COMP) && !defined(COMPRESS)
+#if defined(UNIX) && !defined(ZLIB_COMP) && !defined(COMPRESS) && !defined(WEB_GRAPHICS)
 /* path and file name extension for compression program */
 #define COMPRESS "/usr/bin/compress" /* Lempel-Ziv compression */
 #define COMPRESS_EXTENSION ".Z"      /* compress's extension */
diff --git a/include/global.h b/include/global.h
index a2b70d258..fc1cc050d 100644
--- a/include/global.h
+++ b/include/global.h
@@ -243,7 +243,7 @@ typedef uchar nhsym;
 #endif
 
 #if defined(X11_GRAPHICS) || defined(QT_GRAPHICS) || defined(GNOME_GRAPHICS) \
-    || defined(WIN32)
+    || defined(WIN32) || defined(WEB_GRAPHICS)
 #ifndef USE_TILES
 #define USE_TILES /* glyph2tile[] will be available */
 #endif
diff --git a/include/unixconf.h b/include/unixconf.h
index c126d6839..f6ae00668 100644
--- a/include/unixconf.h
+++ b/include/unixconf.h
@@ -99,6 +99,12 @@
  *              Ralf Brown, 7/26/89 (from v2.3 hack of 10/10/88)
  */
 
+#ifdef WEB_GRAPHICS
+#define NO_FILE_LINKS
+#define LOCKDIR HACKDIR
+#define NO_SIGNAL
+#endif
+
 /* #define NO_FILE_LINKS */                       /* if no hard links */
 /* #define LOCKDIR "/usr/games/lib/nethackdir" */ /* where to put locks */
 
diff --git a/src/windows.c b/src/windows.c
index 94ac40f3e..9b00748e2 100644
--- a/src/windows.c
+++ b/src/windows.c
@@ -3,6 +3,9 @@
 /* NetHack may be freely redistributed.  See license for details. */
 
 #include "hack.h"
+#ifdef WEB_GRAPHICS
+extern struct window_procs web_procs;
+#endif
 #ifdef TTY_GRAPHICS
 #include "wintty.h"
 #endif
@@ -92,6 +95,9 @@ static struct win_choices {
     void *FDECL((*chain_routine), (int, int, void *, void *, void *));
 #endif
 } winchoices[] = {
+#ifdef WEB_GRAPHICS
+    { &web_procs, 0, CHAINR(0) },
+#endif
 #ifdef TTY_GRAPHICS
     { &tty_procs, win_tty_init CHAINR(0) },
 #endif
diff --git a/sys/unix/Makefile.dat b/sys/unix/Makefile.dat
index 00f604396..085edef11 100644
--- a/sys/unix/Makefile.dat
+++ b/sys/unix/Makefile.dat
@@ -13,14 +13,14 @@ VARDAT = bogusmon data engrave epitaph rumors quest.dat oracles options
 
 all:	$(VARDAT) spec_levs quest_levs dungeon
 
-../util/makedefs:
-	(cd ../util ; $(MAKE) makedefs)
+../util/makedefs.js:
+	(cd ../util ; $(MAKE) makedefs.js)
 
-../util/dgn_comp:
-	(cd ../util ; $(MAKE) dgn_comp)
+../util/dgn_comp.js:
+	(cd ../util ; $(MAKE) dgn_comp.js)
 
-../util/lev_comp:
-	(cd ../util ; $(MAKE) lev_comp)
+../util/lev_comp.js:
+	(cd ../util ; $(MAKE) lev_comp.js)
 
 ../util/tile2x11:
 	(cd ../util ; $(MAKE) tile2x11)
@@ -100,70 +100,70 @@ GEM_RSC.RSC:
 	$(UUDECODE) ../win/gem/gem_rsc.uu
 
 
-data:	data.base ../util/makedefs
-	../util/makedefs -d
+data:	data.base ../util/makedefs.js
+	node ../util/makedefs.js -d
 
-rumors:	rumors.tru rumors.fal ../util/makedefs
-	../util/makedefs -r
+rumors:	rumors.tru rumors.fal ../util/makedefs.js
+	node ../util/makedefs.js -r
 
-quest.dat:	quest.txt ../util/makedefs
-	../util/makedefs -q
+quest.dat:	quest.txt ../util/makedefs.js
+	node ../util/makedefs.js -q
 
-oracles:	oracles.txt ../util/makedefs
-	../util/makedefs -h
+oracles:	oracles.txt ../util/makedefs.js
+	node ../util/makedefs.js -h
 
-engrave:	engrave.txt ../util/makedefs
-	../util/makedefs -s
+engrave:	engrave.txt ../util/makedefs.js
+	node ../util/makedefs.js -s
 
-epitaph:	epitaph.txt ../util/makedefs
-	../util/makedefs -s
+epitaph:	epitaph.txt ../util/makedefs.js
+	node ../util/makedefs.js -s
 
-bogusmon:	bogusmon.txt ../util/makedefs
-	../util/makedefs -s
+bogusmon:	bogusmon.txt ../util/makedefs.js
+	node ../util/makedefs.js -s
 
 # note: 'options' should have already been made when include/date.h was created
-options:	../util/makedefs
-	../util/makedefs -v
+options:	../util/makedefs.js
+	node ../util/makedefs.js -v
 
 
-spec_levs: ../util/lev_comp \
+spec_levs: ../util/lev_comp.js \
 	bigroom.des castle.des endgame.des gehennom.des knox.des medusa.des \
 	mines.des oracle.des sokoban.des tower.des yendor.des
-	../util/lev_comp bigroom.des
-	../util/lev_comp castle.des
-	../util/lev_comp endgame.des
-	../util/lev_comp gehennom.des
-	../util/lev_comp knox.des
-	../util/lev_comp medusa.des
-	../util/lev_comp mines.des
-	../util/lev_comp oracle.des
-	../util/lev_comp sokoban.des
-	../util/lev_comp tower.des
-	../util/lev_comp yendor.des
+	node ../util/lev_comp.js bigroom.des
+	node ../util/lev_comp.js castle.des
+	node ../util/lev_comp.js endgame.des
+	node ../util/lev_comp.js gehennom.des
+	node ../util/lev_comp.js knox.des
+	node ../util/lev_comp.js medusa.des
+	node ../util/lev_comp.js mines.des
+	node ../util/lev_comp.js oracle.des
+	node ../util/lev_comp.js sokoban.des
+	node ../util/lev_comp.js tower.des
+	node ../util/lev_comp.js yendor.des
 	touch spec_levs
 
-quest_levs: ../util/lev_comp \
+quest_levs: ../util/lev_comp.js \
 	Arch.des Barb.des Caveman.des Healer.des Knight.des Monk.des \
 	Priest.des Ranger.des Rogue.des Samurai.des Tourist.des Valkyrie.des \
 	Wizard.des
-	../util/lev_comp Arch.des
-	../util/lev_comp Barb.des
-	../util/lev_comp Caveman.des
-	../util/lev_comp Healer.des
-	../util/lev_comp Knight.des
-	../util/lev_comp Monk.des
-	../util/lev_comp Priest.des
-	../util/lev_comp Ranger.des
-	../util/lev_comp Rogue.des
-	../util/lev_comp Samurai.des
-	../util/lev_comp Tourist.des
-	../util/lev_comp Valkyrie.des
-	../util/lev_comp Wizard.des
+	node ../util/lev_comp.js Arch.des
+	node ../util/lev_comp.js Barb.des
+	node ../util/lev_comp.js Caveman.des
+	node ../util/lev_comp.js Healer.des
+	node ../util/lev_comp.js Knight.des
+	node ../util/lev_comp.js Monk.des
+	node ../util/lev_comp.js Priest.des
+	node ../util/lev_comp.js Ranger.des
+	node ../util/lev_comp.js Rogue.des
+	node ../util/lev_comp.js Samurai.des
+	node ../util/lev_comp.js Tourist.des
+	node ../util/lev_comp.js Valkyrie.des
+	node ../util/lev_comp.js Wizard.des
 	touch quest_levs
 
-dungeon: dungeon.def ../util/makedefs ../util/dgn_comp
-	../util/makedefs -e
-	../util/dgn_comp dungeon.pdf
+dungeon: dungeon.def ../util/makedefs.js ../util/dgn_comp.js
+	node ../util/makedefs.js -e
+	node ../util/dgn_comp.js dungeon.pdf
 
 # gitinfo.txt is optionally made by src/Makefile when creating date.h
 clean:
diff --git a/sys/unix/Makefile.src b/sys/unix/Makefile.src
index eeb30b9a0..c4435facb 100644
--- a/sys/unix/Makefile.src
+++ b/sys/unix/Makefile.src
@@ -429,7 +429,7 @@ AT_V1 := @
 AT = $(AT_V$(QUIETCC))
 # Verbosity, end
 
-MAKEDEFS = ../util/makedefs
+MAKEDEFS = ../util/makedefs.js
 
 # timestamp files to reduce `make' overhead and shorten .o dependency lists
 CONFIG_H = ../src/config.h-t
@@ -595,6 +595,10 @@ objects.o:
 	$(CC) $(CFLAGS) -c objects.c
 	@rm -f $(MAKEDEFS)
 
+web.o: ../win/web/web.c $(HACK_H) ../include/dlb.h \
+		../include/patchlevel.h
+	$(CC) $(CFLAGS) -c ../win/web/web.c
+
 # Qt 3 windowport meta-object-compiler output
 qt_kde0.moc: ../include/qt_kde0.h
 	$(QTDIR)/bin/moc -o qt_kde0.moc ../include/qt_kde0.h
@@ -670,7 +674,7 @@ tile.c: ../win/share/tilemap.c $(HACK_H)
 #	up to date before being executed
 ../include/date.h:	$(VERSOURCES) $(HACK_H)
 	-$(SHELL) ../sys/unix/gitinfo.sh $(GITINFO) #before 'makedefs -v'
-	../util/makedefs -v
+	node ../util/makedefs.js -v
 
 
 lint:
diff --git a/sys/unix/Makefile.top b/sys/unix/Makefile.top
index ad7607cd9..c9124e17f 100644
--- a/sys/unix/Makefile.top
+++ b/sys/unix/Makefile.top
@@ -184,11 +184,11 @@ title.img:
 	( cd dat ; $(MAKE) title.img )
 
 check-dlb: options
-	@if egrep -s librarian dat/options ; then $(MAKE) dlb ; else true ; fi
+	@if egrep -s librarian dat/options ; then $(MAKE) dlb.js ; else true ; fi
 
-dlb:
-	( cd util ; $(MAKE) dlb )
-	( cd dat ; LC_ALL=C ; ../util/dlb cf nhdat $(DATDLB) )
+dlb.js:
+	( cd util ; $(MAKE) dlb.js )
+	( cd dat ; LC_ALL=C ; node ../util/dlb.js cf nhdat $(DATDLB) )
 
 # recover can be used when INSURANCE is defined in include/config.h
 # and the checkpoint option is true
diff --git a/sys/unix/Makefile.utl b/sys/unix/Makefile.utl
index 78e9d725f..2fbe8a27e 100644
--- a/sys/unix/Makefile.utl
+++ b/sys/unix/Makefile.utl
@@ -102,6 +102,8 @@ NHSROOT=..
 # we avoid that by forcing it empty rather than by overriding default rules
 CPPFLAGS =
 
+UTIL_CFLAGS = --pre-js ../win/web/mount_nodefs.js 
+
 LIBS =
 
 # If you are cross-compiling, you must use this:
@@ -225,8 +227,8 @@ YACCDIST =
 
 #	dependencies for makedefs
 #
-makedefs:	$(MAKEOBJS) mdgrep.h
-	$(CC) $(LFLAGS) -o makedefs $(MAKEOBJS)
+makedefs.js:	$(MAKEOBJS) mdgrep.h
+	$(CC) $(LFLAGS) $(UTIL_CFLAGS) -o makedefs.js $(MAKEOBJS)
 
 makedefs.o: makedefs.c $(CONFIG_H) ../include/permonst.h \
 		../include/objclass.h ../include/monsym.h \
@@ -238,12 +240,12 @@ makedefs.o: makedefs.c $(CONFIG_H) ../include/permonst.h \
 mdgreph: mdgrep.pl
 	perl mdgrep.pl
 
-../include/onames.h: makedefs
-	./makedefs -o
-../include/pm.h: makedefs
-	./makedefs -p
-../include/vis_tab.h: makedefs
-	./makedefs -z
+../include/onames.h: makedefs.js
+	node ./makedefs.js -o
+../include/pm.h: makedefs.js
+	node ./makedefs.js -p
+../include/vis_tab.h: makedefs.js
+	node ./makedefs.js -z
 # makedefs -z makes both vis_tab.h and vis_tab.c, but writes the .h first
 ../src/vis_tab.c: ../include/vis_tab.h
 
@@ -262,8 +264,8 @@ panic.o:     panic.c $(CONFIG_H)
 
 #	dependencies for lev_comp
 #
-lev_comp:  $(SPLEVOBJS)
-	$(CC) $(LFLAGS) -o lev_comp $(SPLEVOBJS) $(LIBS)
+lev_comp.js:  $(SPLEVOBJS)
+	$(CC) $(LFLAGS) $(UTIL_CFLAGS) -o lev_comp.js $(SPLEVOBJS) $(LIBS)
 
 lev_yacc.o:  lev_yacc.c $(HACK_H) ../include/sp_lev.h
 lev_main.o:  lev_main.c $(HACK_H) ../include/sp_lev.h ../include/tcap.h \
@@ -308,8 +310,8 @@ lintlev:
 
 #	dependencies for dgn_comp
 #
-dgn_comp:  $(DGNCOMPOBJS)
-	$(CC) $(LFLAGS) -o dgn_comp $(DGNCOMPOBJS) $(LIBS)
+dgn_comp.js:  $(DGNCOMPOBJS)
+	$(CC) $(LFLAGS) $(UTIL_CFLAGS) -o dgn_comp.js $(DGNCOMPOBJS) $(LIBS)
 
 dgn_yacc.o:  dgn_yacc.c $(CONFIG_H) ../include/dgn_file.h ../include/date.h
 dgn_main.o:  dgn_main.c $(CONFIG_H) ../include/dlb.h
@@ -351,8 +353,8 @@ recover.o: recover.c $(CONFIG_H) ../include/date.h
 
 #	dependencies for dlb
 #
-dlb:	$(DLBOBJS)
-	$(CC) $(LFLAGS) -o dlb $(DLBOBJS) $(LIBS)
+dlb.js:	$(DLBOBJS)
+	$(CC) $(LFLAGS) $(UTIL_CFLAGS) -o dlb.js $(DLBOBJS) $(LIBS)
 
 dlb_main.o: dlb_main.c $(CONFIG_H) ../include/dlb.h ../include/date.h
 	$(CC) $(CFLAGS) -c dlb_main.c
@@ -365,7 +367,7 @@ TEXT_IO = tiletext.o tiletxt.o $(OALLOC) $(ONAMING)
 GIFREADERS = gifread.o
 PPMWRITERS = ppmwrite.o
 
-tileutils: tilemap gif2txt txt2ppm tile2x11
+tileutils: tilemap.js gif2txt txt2ppm tile2x11
 
 gif2txt: $(GIFREADERS) $(TEXT_IO)
 	$(CC) $(LFLAGS) -o gif2txt $(GIFREADERS) $(TEXT_IO) $(LIBS)
@@ -392,10 +394,10 @@ tile2beos: tile2beos.o $(TEXT_IO)
 #  that without mucking about with extra OS-specific CFLAGS and/or LFLAGS
 #tilemap: ../win/share/tilemap.c $(HACK_H)
 #	$(CC) $(CFLAGS) $(LFLAGS) -o tilemap ../win/share/tilemap.c $(LIBS)
-tilemap: tilemap.o
-	$(CC) $(LFLAGS) -o tilemap tilemap.o $(LIBS)
-../src/tile.c: tilemap
-	./tilemap
+tilemap.js: tilemap.o
+	$(CC) $(LFLAGS) $(UTIL_CFLAGS) -o tilemap.js tilemap.o $(LIBS)
+../src/tile.c: tilemap.js
+	node ./tilemap.js
 
 ../include/tile.h: ../win/share/tile.h
 	cp ../win/share/tile.h ../include/tile.h
@@ -502,6 +504,6 @@ spotless: clean
 	-rm -f lev_lex.c lev_yacc.c dgn_lex.c dgn_yacc.c
 	-rm -f ../include/lev_comp.h ../include/dgn_comp.h
 	-rm -f ../include/tile.h tiletxt.c
-	-rm -f makedefs lev_comp dgn_comp recover dlb
+	-rm -f makedefs.js makedefs.wasm lev_comp.js dgn_comp.js recover dlb.js
 	-rm -f gif2txt txt2ppm tile2x11 tile2img.ttp xpm2img.ttp \
-		tilemap tileedit tile2bmp
+		tilemap.js tileedit tile2bmp
diff --git a/sys/unix/hints/linux b/sys/unix/hints/linux
index 862915053..8f64e523d 100644
--- a/sys/unix/hints/linux
+++ b/sys/unix/hints/linux
@@ -11,37 +11,45 @@
 
 #PREFIX=/usr
 PREFIX=$(wildcard ~)/nh/install
-HACKDIR=$(PREFIX)/games/lib/$(GAME)dir
-SHELLDIR = $(PREFIX)/games
+HACKDIR=$(PREFIX)/nethack
+SHELLDIR = $(PREFIX)/nethack
 INSTDIR=$(HACKDIR)
 VARDIR = $(HACKDIR)
 
 
-
 POSTINSTALL=cp -n sys/unix/sysconf $(INSTDIR)/sysconf; $(CHOWN) $(GAMEUID) $(INSTDIR)/sysconf; $(CHGRP) $(GAMEGRP) $(INSTDIR)/sysconf; chmod $(VARFILEPERM) $(INSTDIR)/sysconf;
 
-CFLAGS=-g -O -I../include -DNOTPARMDECL
+CFLAGS=-g -O3 -I../include -DNOTPARMDECL
 CFLAGS+=-DDLB
-CFLAGS+=-DCOMPRESS=\"/bin/gzip\" -DCOMPRESS_EXTENSION=\".gz\"
+# CFLAGS+=-DCOMPRESS=\"/bin/gzip\" -DCOMPRESS_EXTENSION=\".gz\"
 CFLAGS+=-DSYSCF -DSYSCF_FILE=\"$(HACKDIR)/sysconf\" -DSECURE
 CFLAGS+=-DTIMED_DELAY
 CFLAGS+=-DHACKDIR=\"$(HACKDIR)\"
 CFLAGS+=-DDUMPLOG
 CFLAGS+=-DCONFIG_ERROR_SECURE=FALSE
-CFLAGS+=-DCURSES_GRAPHICS
+# CFLAGS+=-DCURSES_GRAPHICS
 #CFLAGS+=-DEXTRA_SANITY_CHECKS
 #CFLAGS+=-DEDIT_GETLIN
 #CFLAGS+=-DSCORE_ON_BOTL
 #CFLAGS+=-DMSGHANDLER
 #CFLAGS+=-DTTY_TILES_ESCCODES
 
+CC=emcc
+CFLAGS+= -DWEB_GRAPHICS -DNOTTYGRAPHICS
+GAME=
+
 LINK=$(CC)
 # Only needed for GLIBC stack trace:
-LFLAGS=-rdynamic
+LFLAGS=-rdynamic -lnodefs.js -s ASYNCIFY --js-library ../../src/web.js
+LFLAGS+=-s ERROR_ON_UNDEFINED_SYMBOLS=0
+
+WINWEBSRC = ../win/web/web.c tile.c
+WINWEBOBJ = web.o tile.o
+WINWEBLIB =
 
-WINSRC = $(WINTTYSRC) $(WINCURSESSRC)
-WINOBJ = $(WINTTYOBJ) $(WINCURSESOBJ)
-WINLIB = $(WINTTYLIB) $(WINCURSESLIB)
+WINSRC = $(WINWEBSRC)
+WINOBJ = $(WINWEBOBJ)
+WINLIB = $(WINWEBLIB)
 
 # if TTY_TILES_ESCCODES
 #WINSRC += tile.c
diff --git a/util/makedefs.c b/util/makedefs.c
index cd971bcc0..2cbc030a8 100644
--- a/util/makedefs.c
+++ b/util/makedefs.c
@@ -7,6 +7,11 @@
 
 #define MAKEDEFS_C /* use to conditionally include file sections */
 
+#include <unistd.h>
+#include <stdio.h>
+#include <limits.h>
+#include <dirent.h>
+
 #include "config.h"
 #ifdef MONITOR_HEAP
 #undef free /* makedefs doesn't use the alloc and free in src/alloc.c */
@@ -1544,6 +1549,9 @@ build_savebones_compat_string()
 }
 
 static const char *build_opts[] = {
+#ifdef WEB_GRAPHICS
+    "Web",
+#endif
 #ifdef AMIGA_WBENCH
     "Amiga WorkBench support",
 #endif
@@ -1747,6 +1755,9 @@ static struct win_info window_opts[] = {
 #endif
     },
 #endif
+#ifdef WEB_GRAPHICS
+    { "web", "Web" },
+#endif
 #ifdef CURSES_GRAPHICS
     { "curses", "terminal-based graphics" },
 #endif
@@ -2790,6 +2801,7 @@ do_objs()
     Strcat(filename, file_prefix);
 #endif
     Sprintf(eos(filename), INCLUDE_TEMPLATE, ONAME_FILE);
+
     if (!(ofp = fopen(filename, WRTMODE))) {
         perror(filename);
         exit(EXIT_FAILURE);
diff --git a/win/web/mount_nodefs.js b/win/web/mount_nodefs.js
new file mode 100644
index 000000000..cfdd94d72
--- /dev/null
+++ b/win/web/mount_nodefs.js
@@ -0,0 +1,24 @@
+// vim: set sw=2 ts=2 et ft=javascript
+// Copyright (c) 2015 Lu Wang <coolwanglu@gmail.com>
+
+// mount local file system for util files
+// this file is supposed to be bulit with --pre-js
+
+var Module = {};
+Module['preRun'] = function() {
+  var fs = require('fs');
+  var path = require('path');
+  // find top dir
+  var cur_dir = path.normalize(process.cwd());
+  var top_dir = path.normalize(cur_dir+'/..');
+  assert(fs.existsSync(top_dir+'/README'));
+  
+  // mount directories
+  ['dat', 'include', 'src', 'util'].forEach(function(dn) {
+      var slash_dn = '/' + dn;
+      FS.mkdir(slash_dn);
+      FS.mount(NODEFS, { root: top_dir + slash_dn }, slash_dn);
+      if(cur_dir == path.normalize(top_dir + slash_dn))
+        FS.chdir(slash_dn);
+  });
+};
diff --git a/win/web/web.c b/win/web/web.c
new file mode 100644
index 000000000..64374f66a
--- /dev/null
+++ b/win/web/web.c
@@ -0,0 +1,132 @@
+#include "hack.h"
+#include <emscripten/emscripten.h>
+
+
+extern void web_init_nhwindows(int * a, char ** b); 
+extern void web_player_selection ();
+extern void web_askname ();
+extern void web_get_nh_event ();
+extern void web_exit_nhwindows(const char * a); 
+extern void web_suspend_nhwindows(const char * a); 
+extern void web_resume_nhwindows ();
+extern winid web_create_nhwindow(int a); 
+extern void web_clear_nhwindow(winid a); 
+extern void web_display_nhwindow(winid a, BOOLEAN_P b); 
+extern void web_destroy_nhwindow(winid a); 
+extern void web_curs(winid a, int b, int c); 
+extern void web_putstr(winid a, int b, const char * c); 
+extern void web_putmixed(winid a, int b, const char * c); 
+extern void web_display_file(const char * a, BOOLEAN_P b); 
+extern void web_start_menu(winid a); 
+extern void web_add_menu(winid a, int b, const ANY_P * c, CHAR_P d, CHAR_P e, int f, const char * g, BOOLEAN_P h); 
+extern void web_end_menu(winid a, const char * b); 
+extern int web_select_menu(winid a, int b, MENU_ITEM_P ** c); 
+extern char web_message_menu(CHAR_P a, int b, const char * c); 
+extern void web_update_inventory ();
+extern void web_mark_synch ();
+extern void web_wait_synch ();
+#ifdef CLIPPING
+extern void web_cliparound(int a, int b); 
+#endif
+#ifdef POSITIONBAR
+extern void web_update_positionbar(char * a); 
+#endif
+extern void web_print_glyph(winid a, XCHAR_P b, XCHAR_P c, int d, int e); 
+extern void web_raw_print(const char * a); 
+extern void web_raw_print_bold(const char * a); 
+extern int web_nhgetch ();
+extern int web_nh_poskey(int * a, int * b, int * c); 
+extern void web_nhbell ();
+extern int web_doprev_message ();
+extern char web_yn_function(const char * a, const char * b, CHAR_P c); 
+extern void web_getlin(const char * a, char * b); 
+extern int web_get_ext_cmd ();
+extern void web_number_pad(int a); 
+extern void web_delay_output ();
+#ifdef CHANGE_COLOR
+extern void web_change_color(int a, long b, int c); 
+#ifdef MAC
+extern void web_change_background(int a); 
+extern short web_set_font_name(winid a, char * b); 
+#endif
+extern char * web_get_color_string ();
+#endif
+extern void web_start_screen ();
+extern void web_end_screen ();
+extern void web_outrip(winid a, int b, time_t c); 
+extern void web_preference_update(const char * a); 
+extern char * web_getmsghistory(BOOLEAN_P a); 
+extern void web_putmsghistory(const char * a, BOOLEAN_P b); 
+extern void web_status_init ();
+extern void web_status_finish ();
+extern void web_status_enablefield(int a, const char * b, const char * c, BOOLEAN_P d); 
+extern void web_status_update(int a, genericptr_t b, int c, int d, int e, unsigned long * f); 
+extern boolean web_can_suspend ();
+
+
+struct window_procs web_procs = {
+	"web",
+	WC_HILITE_PET | WC_MOUSE_SUPPORT,
+	0L, // wincap2
+	{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1}, // disable colors?
+	web_init_nhwindows,
+	web_player_selection,
+	web_askname,
+	web_get_nh_event,
+	web_exit_nhwindows,
+	web_suspend_nhwindows,
+	web_resume_nhwindows,
+	web_create_nhwindow,
+	web_clear_nhwindow,
+	web_display_nhwindow,
+	web_destroy_nhwindow,
+	web_curs,
+	web_putstr,
+	web_putmixed,
+	web_display_file,
+	web_start_menu,
+	web_add_menu,
+	web_end_menu,
+	web_select_menu,
+	web_message_menu,
+	web_update_inventory,
+	web_mark_synch,
+	web_wait_synch,
+#ifdef CLIPPING
+	web_cliparound,
+#endif
+#ifdef POSITIONBAR
+	web_update_positionbar,
+#endif
+	web_print_glyph,
+	web_raw_print,
+	web_raw_print_bold,
+	web_nhgetch,
+	web_nh_poskey,
+	web_nhbell,
+	web_doprev_message,
+	web_yn_function,
+	web_getlin,
+	web_get_ext_cmd,
+	web_number_pad,
+	web_delay_output,
+#ifdef CHANGE_COLOR
+	web_change_color,
+#ifdef MAC
+	web_change_background,
+	web_set_font_name,
+#endif
+	web_get_color_string,
+#endif
+	web_start_screen,
+	web_end_screen,
+	web_outrip,
+	web_preference_update,
+	web_getmsghistory,
+	web_putmsghistory,
+	web_status_init,
+	web_status_finish,
+	web_status_enablefield,
+	web_status_update,
+	web_can_suspend,
+};
\ No newline at end of file
